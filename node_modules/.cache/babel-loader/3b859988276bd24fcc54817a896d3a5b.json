{"ast":null,"code":"var _jsxFileName = \"/home/kareem/Code/React/portfolio/src/components/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Section from '../patterns/Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst classNames = require('classnames');\n\nconst Projects = () => {\n  _s();\n\n  const [topic, setTopic] = useState('React');\n\n  const changeTopic = e => setTopic(e.target.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui inverted secondary pointing menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames({\n          \"item\": true,\n          \"active\": topic === \"React\"\n        }),\n        id: \"React\",\n        onClick: changeTopic,\n        children: \"React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames({\n          \"item\": true,\n          \"active\": topic === \"Python\"\n        }),\n        id: \"Python\",\n        onClick: changeTopic,\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames({\n          \"item\": true,\n          \"active\": topic === \"Java\"\n        }),\n        id: \"Java\",\n        onClick: changeTopic,\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classNames({\n          \"item\": true,\n          \"active\": topic === \"C\"\n        }),\n        id: \"C\",\n        onClick: changeTopic,\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), topic === \"React\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Portfolio\",\n        body1: \"Constantly updating my personal website to keep an accurate record of my projects & accomplishments.\",\n        body2: \"Building this site gave me lots of insight into the world of React development, where I learned concepts including, but not limited to, reusable/configurable components, Router, and useState.\",\n        body3: \"I hope to continue expanding this site in hopes of giving the world an accurate idea of who I am.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Powerwash\",\n        body1: \"Currently building a business website for a small power washing company.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), topic === \"Python\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Simple Templating Engine\",\n        body1: \"Takes as input a generic template with placeholders for generic data, a set of input files containing data which should be applied to the template, and a date.\",\n        body2: \"Instantiated templates using the input data will be output to a subdirectory.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Face Mask Detector\",\n        body1: \"A library and command line utility for detecting face masks in images and video streams.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Patient Management System\",\n        body1: \"System to keep track of defibrillator patients billing information.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Fingerprint\",\n        body1: \"Script that will run a sequence of commands in order to determine a unique key for that device.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"RM Command Alternative\",\n        body1: \"Takes an arbitrary number of paths as arguments, and, for each argument, move them to ~/rm_trash.\",\n        body2: \"If ~/rm_trash does not already exist, it should be created.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Hangman\",\n        body1: \"Terminal hangman game with different categories.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), topic === \"Java\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Elevator\",\n        body1: \"Implementation of an Elevator. The elevator can travel to floors 1, 2, or 3.\",\n        body2: \"Object oriented design including State and Mediator patterns, along with UML state diagram.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"War\",\n        body1: \"Object-oriented implementation of the card game War, with three different variations to play.\",\n        body2: \"Implemented several GRASP design principles including high cohesion and low coupling, as well as the Liskov Substitution SOLID design principle.\",\n        href: \"https://www.github.com/kareemsasa3/war-game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Drawing\",\n        body1: \"Program that stores an arbitrary sequence of commands that manipulates and uses a drawing list, with a primary focus on creation and maintenance of the drawing list.\",\n        body3: \"Object-oriented design including Strategy, Command, and Memento patterns, along with UML class diagram of project.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Jurassic Park\",\n        body1: \"Plan and track dinosours in each zone of the park as it develops and opens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Starfleet\",\n        body1: \"Plan and track dinosours in each zone of the park as it develops and opens.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), topic === \"C\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Memory Management\",\n        body1: \"Simulator that implements the operating system's address translation mechanisms.\",\n        body2: \"Although an OS can usually support multiple processes, this simulator was designed to handle a single process.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Multilevel Queue Scheduler\",\n        body1: \"Track the simulated processes that currently need to run, then schedule them to run on the CPU according to a set of rules.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Dining Philosophers\",\n        body1: \"Solution to the famous Dining Philosophers problem using multithreading and concurrent programming techniques.\",\n        body2: \"The problem was the brainchild of Dr. E. W. Dijkstra, in which five philosophers spend their lives simply thinking and eating, to the exclusion of all activities.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Course Catalog Database\",\n        body1: \"System stores basic information about each course, allowing the user to create, read, update, and delete them.\",\n        body2: \"All information for all courses are stored as binary records in a single file.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Word Count\",\n        body1: \"Find out the number of words in multiple text files.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Projects, \"ZF6yKBwmjb1+ksV2eMZw9C4LD80=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/home/kareem/Code/React/portfolio/src/components/Projects.js"],"names":["React","useState","Section","classNames","require","Projects","topic","setTopic","changeTopic","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Section from '../patterns/Section';\n\nconst classNames = require('classnames');\n\nconst Projects = () => {\n    const [ topic, setTopic ] = useState('React');\n    \n    const changeTopic = (e) => setTopic(e.target.id);\n\n    return (\n        <div>\n            <h1>Projects</h1>\n            <div className=\"ui inverted secondary pointing menu\">\n                <button className={classNames({\n                    \"item\" : true,\n                    \"active\" : topic===\"React\"\n                })} id=\"React\" onClick={changeTopic}>\n                    React\n                </button>\n                <button className={classNames({\n                    \"item\" : true,\n                    \"active\" : topic===\"Python\"\n                })} id=\"Python\" onClick={changeTopic}>\n                    Python\n                </button>\n                <button className={classNames({\n                    \"item\" : true,\n                    \"active\" : topic===\"Java\"\n                })} id=\"Java\" onClick={changeTopic}>\n                    Java\n                </button>\n                <button className={classNames({\n                    \"item\" : true,\n                    \"active\" : topic===\"C\"\n                })} id=\"C\" onClick={changeTopic}>\n                    C\n                </button>\n            </div>\n            { topic === \"React\" && (\n                <>\n                <Section \n                    title=\"Portfolio\"\n                    body1=\"Constantly updating my personal website to keep an accurate record of my projects & accomplishments.\"\n                    body2=\"Building this site gave me lots of insight into the world of React development, where I learned concepts including, but not limited to, reusable/configurable components, Router, and useState.\"\n                    body3=\"I hope to continue expanding this site in hopes of giving the world an accurate idea of who I am.\"\n                />\n                <Section \n                    title=\"Powerwash\"\n                    body1=\"Currently building a business website for a small power washing company.\"\n                />\n                </>\n            )}\n            { topic === \"Python\" && (\n                <>\n                <Section\n                    title=\"Simple Templating Engine\"\n                    body1=\"Takes as input a generic template with placeholders for generic data, a set of input files containing data which should be applied to the template, and a date.\"\n                    body2=\"Instantiated templates using the input data will be output to a subdirectory.\"\n                />\n                <Section \n                    title=\"Face Mask Detector\"\n                    body1=\"A library and command line utility for detecting face masks in images and video streams.\"\n                />\n                <Section \n                    title=\"Patient Management System\"\n                    body1=\"System to keep track of defibrillator patients billing information.\"\n                />\n                <Section \n                    title=\"Fingerprint\"\n                    body1=\"Script that will run a sequence of commands in order to determine a unique key for that device.\"\n                />\n                <Section\n                    title=\"RM Command Alternative\"\n                    body1=\"Takes an arbitrary number of paths as arguments, and, for each argument, move them to ~/rm_trash.\"\n                    body2=\"If ~/rm_trash does not already exist, it should be created.\"\n                />\n                <Section \n                    title=\"Hangman\"\n                    body1=\"Terminal hangman game with different categories.\"\n                />\n                </>\n            )}\n            { topic === \"Java\" && (\n                <>\n                <Section \n                    title=\"Elevator\"\n                    body1=\"Implementation of an Elevator. The elevator can travel to floors 1, 2, or 3.\"\n                    body2=\"Object oriented design including State and Mediator patterns, along with UML state diagram.\"\n                />\n                <Section \n                    title=\"War\"\n                    body1=\"Object-oriented implementation of the card game War, with three different variations to play.\"\n                    body2=\"Implemented several GRASP design principles including high cohesion and low coupling, as well as the Liskov Substitution SOLID design principle.\"\n                    href=\"https://www.github.com/kareemsasa3/war-game\"\n                />\n                <Section\n                    title=\"Drawing\"\n                    body1=\"Program that stores an arbitrary sequence of commands that manipulates and uses a drawing list, with a primary focus on creation and maintenance of the drawing list.\"\n                    body3=\"Object-oriented design including Strategy, Command, and Memento patterns, along with UML class diagram of project.\"\n                />\n                <Section\n                    title=\"Jurassic Park\"\n                    body1=\"Plan and track dinosours in each zone of the park as it develops and opens.\"\n                />\n                <Section\n                    title=\"Starfleet\"\n                    body1=\"Plan and track dinosours in each zone of the park as it develops and opens.\"\n                />\n                </>\n            )}\n            { topic === \"C\" && (\n                <>\n                <Section\n                    title=\"Memory Management\"\n                    body1=\"Simulator that implements the operating system's address translation mechanisms.\"\n                    body2=\"Although an OS can usually support multiple processes, this simulator was designed to handle a single process.\"\n                />\n                <Section\n                    title=\"Multilevel Queue Scheduler\"\n                    body1=\"Track the simulated processes that currently need to run, then schedule them to run on the CPU according to a set of rules.\"\n                />\n                <Section\n                    title=\"Dining Philosophers\"\n                    body1=\"Solution to the famous Dining Philosophers problem using multithreading and concurrent programming techniques.\"\n                    body2=\"The problem was the brainchild of Dr. E. W. Dijkstra, in which five philosophers spend their lives simply thinking and eating, to the exclusion of all activities.\"\n                />\n                <Section\n                    title=\"Course Catalog Database\"\n                    body1=\"System stores basic information about each course, allowing the user to create, read, update, and delete them.\"\n                    body2=\"All information for all courses are stored as binary records in a single file.\"\n                />\n                <Section\n                    title=\"Word Count\"\n                    body1=\"Find out the number of words in multiple text files.\"\n                />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}